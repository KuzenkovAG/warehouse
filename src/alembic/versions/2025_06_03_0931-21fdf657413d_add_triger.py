"""add triger

Revision ID: 21fdf657413d
Revises: 060551418339
Create Date: 2025-06-03 09:31:19.431154

"""
from alembic import op


# revision identifiers, used by Alembic.
revision = '21fdf657413d'
down_revision = '060551418339'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # TODO: добавить в тригер чтобы при если количество становится отрицательным, устанавливать в 0
    queries = [
        """
        CREATE OR REPLACE FUNCTION update_warehouse_quantity()
        RETURNS TRIGGER AS $$
        BEGIN
            -- Проверяем тип движения (приход или расход)
            IF NEW.event = 'arrival' THEN
                -- Пытаемся обновить существующую запись на складе
                UPDATE warehouses
                SET 
                    quantity = quantity + NEW.quantity,
                    updated_at = NOW()
                WHERE 
                    warehouse_id = NEW.warehouse_id 
                    AND product_id = NEW.product_id
                    AND is_active = TRUE;
                
                -- Если запись не найдена, создаем новую
                IF NOT FOUND THEN
                    INSERT INTO warehouses (
                        id,
                        warehouse_id,
                        product_id,
                        quantity,
                        created_at,
                        updated_at,
                        is_active
                    ) VALUES (
                        gen_random_uuid(),
                        NEW.warehouse_id,
                        NEW.product_id,
                        NEW.quantity,
                        NOW(),
                        NOW(),
                        TRUE
                    );
                END IF;
            ELSIF NEW.event = 'departure' THEN
                -- Для расхода уменьшаем количество
                
                UPDATE warehouses
                SET 
                    quantity = quantity - NEW.quantity,
                    updated_at = NOW()
                WHERE 
                    warehouse_id = NEW.warehouse_id 
                    AND product_id = NEW.product_id
                    AND is_active = TRUE;
                
                -- Проверяем, что количество не стало отрицательным
                IF NOT FOUND THEN
                    INSERT INTO warehouses (
                        id,
                        warehouse_id,
                        product_id,
                        quantity,
                        created_at,
                        updated_at,
                        is_active
                    ) VALUES (
                        gen_random_uuid(),
                        NEW.warehouse_id,
                        NEW.product_id,
                        0,
                        NOW(),
                        NOW(),
                        TRUE
                    );
                END IF;
            END IF;
            
            RETURN NEW;
        END;
        $$ LANGUAGE plpgsql;
        """,
        """
        -- Создаем триггер, который срабатывает после вставки в movements
        CREATE TRIGGER movements_after_insert
        AFTER INSERT ON movements
        FOR EACH ROW
        EXECUTE FUNCTION update_warehouse_quantity();
        """
    ]
    for query in queries:
        op.execute(query)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    queries = [
        "DROP TRIGGER IF EXISTS movements_after_insert ON movements;",
        "DROP FUNCTION IF EXISTS update_warehouse_quantity();",
    ]
    for query in queries:
        op.execute(query)
    # ### end Alembic commands ###
